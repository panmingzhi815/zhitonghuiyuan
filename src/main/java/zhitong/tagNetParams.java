package zhitong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagNetParams extends Structure {
	/**
	 * \u8bbe\u5907IP<br>
	 * C type : unsigned char[16]
	 */
	public byte[] ucDeviceIP = new byte[16];
	/**
	 * \u5b50\u7f51\u63a9\u7801<br>
	 * C type : unsigned char[16]
	 */
	public byte[] ucMaskIP = new byte[16];
	/**
	 * \u7f51\u5173IP<br>
	 * C type : unsigned char[16]
	 */
	public byte[] ucGateIP = new byte[16];
	/**
	 * MAC\u5730\u5740<br>
	 * C type : unsigned char[6]
	 */
	public byte[] ucMac = new byte[6];
	public tagNetParams() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ucDeviceIP", "ucMaskIP", "ucGateIP", "ucMac");
	}
	/**
	 * @param ucDeviceIP \u8bbe\u5907IP<br>
	 * C type : unsigned char[16]<br>
	 * @param ucMaskIP \u5b50\u7f51\u63a9\u7801<br>
	 * C type : unsigned char[16]<br>
	 * @param ucGateIP \u7f51\u5173IP<br>
	 * C type : unsigned char[16]<br>
	 * @param ucMac MAC\u5730\u5740<br>
	 * C type : unsigned char[6]
	 */
	public tagNetParams(byte ucDeviceIP[], byte ucMaskIP[], byte ucGateIP[], byte ucMac[]) {
		super();
		if ((ucDeviceIP.length != this.ucDeviceIP.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ucDeviceIP = ucDeviceIP;
		if ((ucMaskIP.length != this.ucMaskIP.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ucMaskIP = ucMaskIP;
		if ((ucGateIP.length != this.ucGateIP.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ucGateIP = ucGateIP;
		if ((ucMac.length != this.ucMac.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ucMac = ucMac;
	}
	public tagNetParams(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagNetParams implements Structure.ByReference {
		
	};
	public static class ByValue extends tagNetParams implements Structure.ByValue {
		
	};
}
